name: Build and Deploy

on:
  push:
    branches: [ main ]

jobs:
  tailwindcss:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Tailwind CSS build
        run: |
          bun install --production
          bunx @tailwindcss/cli -i ./assets/tailwind.css -o ./assets/styling/main.css --minify

      - name: Upload tailwindcss
        uses: actions/upload-artifact@v4
        with:
          name: main-css
          path: ./assets

  dioxus-bundle:
    needs: tailwindcss
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Download tailwindcss
        uses: actions/download-artifact@v4
        with:
          name: main-css
          path: ./assets

      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Rustup prepare
        run: |
          rustup update stable && rustup default stable
          rustup target add wasm32-unknown-unknown

      - name: Check curl
        run: type -p curl >/dev/null || (sudo apt-get update && sudo apt-get install curl -y)

      - name: Install cargo-binstall
        run: curl -L --proto '=https' --tlsv1.2 -sSf https://raw.githubusercontent.com/cargo-bins/cargo-binstall/main/install-from-binstall-release.sh | bash

      - name: Binstall dioxus-cli
        run: cargo binstall dioxus-cli

      - name: Cargo install
        run: cargo install --path .

      - run: dx bundle --release --platform web --ssg

      - name: Upload assets
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: ./dist/public

  deploy:
    needs: dioxus-bundle
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v5
      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - run: bun install wrangler

      - name: Download assets
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: ./dist/public

      - name: Deploy
        uses: cloudflare/wrangler-action@v3
        with:
          packageManager: bun
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
